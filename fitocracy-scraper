#!/usr/bin/env ruby
# class FitocracyScraper
require 'rubygems'
require 'commander'
require 'pg'
require 'pry'
require 'selenium-webdriver'
require 'terminal-notifier'
require 'terminal-table'

class FitocracyScraper
  include Commander::Methods

  # rubocop:disable Metrics/AbcSize, Metrics/MethodLength
  def run
    table_styles = { margin_left: ' ' * 6, width: 45 }

    program :name, 'Fitocracy Scraper'
    program :version, '1.0.0'
    program :description, 'An application that syncs data from Fitocracy to a local postgresql server.'
    program :help, 'Usage:', "Script useage is very simplistic, provide a valid fitocracy user name and password and this
        will login and parse through html streams to copy data into a postgresql database. Once completed, a system
        notification will be sent.

          Sample Schema:

    #{Terminal::Table.new(title: 'exercises', rows: [%w[id name]], style: table_styles)}

    #{Terminal::Table.new(title: 'workouts', rows: [%w[id date set_group_ids super_set_ids]], style: table_styles)}

    #{Terminal::Table.new(title: 'super_sets', rows: [%w[id set_group_ids]], style: table_styles)}

    #{Terminal::Table.new(title: 'set_groups', rows: [%w[id exercise_id set_ids]], style: table_styles)}

    #{Terminal::Table.new(title: 'sets', rows: [%w[id set_group_id reps pr]], style: table_styles)}"

    global_option('-u', '--user username', 'REQUIRED: You must provider a user name')
    global_option('-p', '--password password', 'REQUIRED: You must provider the corresponding password')
    global_option('-d', '--database database_name', 'The default database name is fitocracy_dump, this will override that')

    default_command :run

    command :run do |command|
      command.action do |_args, options|
        if options.default[:user].nil?
          puts 'You must provide a username: -u username' unless options.default[:user]
        elsif options.default[:password].nil?
          puts 'You must provide a password: -p password' unless options.default[:password]
        else
          @username = options.default[:user]
          @password = options.default[:password]
          @database_name = options.default[:database] || 'fitocracy_dump'

          begin_scrape
        end
      end
    end

    run!
  end
  # rubocop:enable Metrics/AbcSize, Metrics/MethodLength

  def begin_scrape
    setup_driver
    authenticate

    @driver.quit
  end

  def authenticate
    @driver.get('http://fitocracy.com')
    @driver.find_element(link_text: 'Log In').click

    login_form = @driver.find_element(id: 'login-modal-form')
    login_form.find_element(name: 'username').send_keys(@username)
    login_form.find_element(name: 'password').send_keys(@password)
    login_form.submit

    wait_for_profile_id
    TerminalNotifier.notify "Logged in as #{@username} (#{@profile_id})"
  end

  def document_ready
    @driver.execute_script('return document.readyState') == 'complete'
  end

  def wait_for_profile_id
    sleep 1
    if document_ready
      @profile_id = @driver.execute_script('return user_id')
    else
      wait_for_profile_id
    end
  end

  def setup_driver
    driver_options = Selenium::WebDriver::Chrome::Options.new(args: ['headless'])
    @driver = Selenium::WebDriver.for(:chrome, options: driver_options)
    @driver.manage.timeouts.implicit_wait = 10
    TerminalNotifier.notify 'Browser Setup'
  end
end

FitocracyScraper.new.run if $PROGRAM_NAME == __FILE__
